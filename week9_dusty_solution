-- Show the first name and last name of actors whose first name is Nick, Ed, or Jennifer.
SELECT first_name, last_name FROM actor WHERE first_name='Nick' or first_name='Ed' or first_name='Jennifer';

-- Show only the last name of the actor whose first name is either Ed, Nick, or Jennifer.
SELECT last_name FROM actor WHERE first_name='Nick' or first_name='Ed' or first_name='Jennifer';

-- Show all details of the address table.
SELECT * FROM address;

-- Show the district and phone from the address table in descending order of district.
SELECT district, phone FROM address ORDER BY district DESC;

-- Using the film_id from the Film and inventory tables, display the film_id and title from the Film table, and the inventory_id from the inventory table.
SELECT film.film_id, inventory.inventory_id, film.title FROM film INNER JOIN inventory ON film.film_id = inventory.film_id;

-- Show the first 5 rows from the inventory table and rental table.
SELECT * FROM inventory LIMIT 5;
SELECT * FROM rental LIMIT 5;

-- Show the first 10 rows of rental_id, rental_date, and payment_id sorted in descending order by amount from the Rental and Payment tables.
SELECT rental.rental_id, rental.rental_date, payment.payment_id, payment.amount FROM rental INNER JOIN payment ON rental.rental_id = payment.rental_id ORDER BY amount DESC LIMIT 10;

-- Show the details of rows in the Actor table where actor_id is NULL.
SELECT * FROM actor WHERE actor_id IS NULL;

-- Show the details of rows in the Actor table where actor_id is not NULL.
SELECT * FROM actor WHERE actor_id IS NOT NULL;

-- Find the number of non-null rows in the Film table.
SELECT COUNT(*) FROM film WHERE film_id IS NOT NULL;

-- Show the total amount from the Payment table with the output title sum_amt.
SELECT SUM(amount) AS sum_amt FROM payment;

-- Show the maximum and minimum amount from the Payment table.
SELECT MAX(amount) AS max_amount, MIN(amount) AS min_amount FROM payment;
