-- İlk isminde Nick, Ed ve Jennifer adları bulunan aktörlerin adını ve soyadını gösterin.
SELECT first_name, last_name FROM actor WHERE first_name='Nick' or first_name='Ed' or first_name='Jennifer';

-- İlk isminde adları Ed, Nick ve Jennifer olan aktörün sadece soyadını gösterin.
SELECT last_name FROM actor WHERE first_name='Nick' or first_name='Ed' or first_name='Jennifer';

--Adres tablosunun bütün ayrıntılarını gösterin.
SELECT * FROM address;

-- Adres tablosunda ilçe ve telefonu (district & phone) azalan sırada gösterin
SELECT district, phone FROM address ORDER BY district DESC;

-- Film ve envanter tablosundaki film_id’yi kullanarak, Film tablosundan film_id’yi, 
-- title’ i ve Envanter tablosundan envanter_id'sini gösterin.

SELECT film.film_id, inventory.inventory_id, film.title FROM film INNER JOIN inventory ON film.film_id = inventory.film_id;

--Envanter tablosu ve rental tablosundan oluşan ilk 5 satırı gösterin.
SELECT * FROM inventory LIMIT 5;
SELECT * FROM rental LIMIT 5;

--Rental ve Payment tablolarından oluşan amount a göre azalan olarak sıralanmış rental_id, rental_date, 
--payment_id ‘den oluşan ilk 10 satırı gösterin.

SELECT rental.rental_id, rental.rental_date, payment.payment_id, payment.amount  FROM rental INNER JOIN payment 
ON rental.rental_id = payment.rental_id ORDER BY amount DESC LIMIT 10;

--Actor tablosunda actor_id 'nin boş olduğu satırların diğer detaylarını gösteriniz.

SELECT * FROM actor WHERE actor_id = NULL;

-- Actor tablosunda actor_id 'nin boş olmadığı satırların diğer detaylarını gösteriniz.

SELECT * FROM actor WHERE actor_id IS NOT NULL;

-- Film tablosunda boş olmayan satırların sayısını bulunuz.

SELECT COUNT(*) FROM film WHERE film_id IS NOT NULL;

-- Payment tablosundan amount’un toplamını çıktı başlığı sum_amt olarak gösteriniz.

SELECT SUM(amount) AS sum_amt FROM payment;

-- Payment tablosundan maximum ve minimum amount ‘u gösteriniz.

SELECT MAX(amount) AS max_amount, MIN(amount) AS min_amount FROM payment;
